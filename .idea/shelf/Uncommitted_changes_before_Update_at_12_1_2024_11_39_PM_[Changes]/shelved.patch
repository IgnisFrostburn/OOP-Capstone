Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0c389a45-d214-4c35-84d5-6c2b7f36f434\" name=\"Changes\" comment=\"&quot;Add Course and Add Credentials design update&quot;\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Database/EnrollmentDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Database/EnrollmentDatabase.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Database/UtilityDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Database/UtilityDatabase.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoginPageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoginPageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <list default=\"true\" id=\"0c389a45-d214-4c35-84d5-6c2b7f36f434\" name=\"Changes\" comment=\"&quot;Add Course and Add Credentials design update&quot;\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;kevyelly&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/IgnisFrostburn/OOP-Capstone.git&quot;,\r\n    &quot;accountId&quot;: &quot;0d04d356-f879-440a-9c2b-b4a203bebd0f&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n        &quot;associatedIndex&quot;: 6\r\n      }</component>\r\n  <component name=\"ProjectId\" id=\"2pX04b9bj24Q55hg8vBIoHnzefk\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.CoursesDatabase.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.LoginPageApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.StudentDashboard.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.general&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\" selected=\"Application.LoginPageApplication\">\r\n    <configuration name=\"AddCourse\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Dashboard.AddCourse\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"LoginPageApplication\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Login_SignUp.LoginPageApplication\" />\r\n      <module name=\"JavaFXDemo\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StudentDashboard\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.Dashboard.StudentDashboard\" />\r\n      <module name=\"JavaFXDemo\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.Dashboard.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.LoginPageApplication\" />\r\n      <item itemvalue=\"Application.StudentDashboard\" />\r\n      <item itemvalue=\"Application.AddCourse\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.StudentDashboard\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"&quot;Browse Courses&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732770675846</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732770675846</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"&quot;Revised &quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732804441226</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732804441226</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"&quot;Revised &quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732807488442</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732807488442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"&quot;Connected login to dashboard&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732808778849</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732808778849</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"course info sa\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732922423419</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732922423419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"&quot;Add credential update - database connection and update&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732885023702</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732885023702</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"&quot;Add course Update&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732920499697</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732920499697</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"&quot;Changed ip address&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732926867364</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732926867364</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0c389a45-d214-4c35-84d5-6c2b7f36f434\" name=\"Changes\" comment=\"&quot;Add Course and Add Credentials design update&quot;\" />\r\n      <created>1732894268475</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732894268475</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"&quot;Add Course and Add Credentials design update&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732966119781</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732966119781</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"&quot;Add Course and Add Credentials design update&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733017157212</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733017157212</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"&quot;Add Course and Add Credentials design update&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733017562402</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733017562402</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"&quot;Add Course and Add Credentials design update&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1733054917050</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1733054917050</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"&quot;Browse Courses&quot;\" />\r\n    <MESSAGE value=\"&quot;Browse Courses Update 1&quot;\" />\r\n    <MESSAGE value=\"&quot;Revised &quot;\" />\r\n    <MESSAGE value=\"&quot;Connected login to dashboard&quot;\" />\r\n    <MESSAGE value=\"&quot;Add credential update - database connection and update&quot;\" />\r\n    <MESSAGE value=\"&quot;Add course Update&quot;\" />\r\n    <MESSAGE value=\"&quot;Changed ip address&quot;\" />\r\n    <MESSAGE value=\"course info sa\" />\r\n    <MESSAGE value=\"&quot;Add Course and Add Credentials design update&quot;\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"&quot;Add Course and Add Credentials design update&quot;\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1a69fac0a2e9bdfe2f6c5c9705059d14addbea55)
+++ b/.idea/workspace.xml	(date 1733065927750)
@@ -6,20 +6,11 @@
   <component name="ChangeListManager">
     <list default="true" id="0c389a45-d214-4c35-84d5-6c2b7f36f434" name="Changes" comment="&quot;Add Course and Add Credentials design update&quot;">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Database/EnrollmentDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Database/EnrollmentDatabase.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Database/UtilityDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Database/UtilityDatabase.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoginPageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoginPageController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml" afterDir="false" />
     </list>
-    <list default="true" id="0c389a45-d214-4c35-84d5-6c2b7f36f434" name="Changes" comment="&quot;Add Course and Add Credentials design update&quot;">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Course_content/Course_Info_Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Dashboard/StudentDashboardController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Database/CoursesDatabase.java" afterDir="false" />
-    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -244,6 +235,7 @@
     <MESSAGE value="&quot;Changed ip address&quot;" />
     <MESSAGE value="course info sa" />
     <MESSAGE value="&quot;Add Course and Add Credentials design update&quot;" />
-    <option name="LAST_COMMIT_MESSAGE" value="&quot;Add Course and Add Credentials design update&quot;" />
+    <MESSAGE value="Added enrollment functionality" />
+    <option name="LAST_COMMIT_MESSAGE" value="Added enrollment functionality" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/com/example/Database/EnrollmentDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Database;\r\n\r\nimport com.example.Login_SignUp.LoggedInUser;\r\n\r\nimport java.sql.*;\r\n\r\npublic  class EnrollmentDatabase extends UtilityDatabase{\r\n\r\n    public EnrollmentDatabase(){\r\n        super();\r\n    }\r\n    public String getCourseCTR(int studentID){\r\n        try{\r\n            String query = \"SELECT COUNT(*) AS courseCTR FROM enrollment WHERE LearnerID = ?\";\r\n            PreparedStatement statement = connection.prepareStatement(query);\r\n            statement.setString(1, String.valueOf(studentID));\r\n            ResultSet resultSet = statement.executeQuery();\r\n\r\n            if(resultSet.next()){\r\n                return String.valueOf(resultSet.getInt(\"courseCTR\"));\r\n            }\r\n        } catch (SQLException e) {\r\n            System.out.println(\"smthing wrong with sql on method\");\r\n            System.out.println(e.getMessage());\r\n        }\r\n        return null;\r\n    }\r\n    public boolean checkIfEnrolled(int userID, int courseID){\r\n        String query = \"SELECT COUNT(*) AS count FROM enrollment WHERE LearnerID = ? AND CourseID = ?;\";\r\n        try{\r\n            PreparedStatement statement = connection.prepareStatement(query);\r\n            statement.setString(1, String.valueOf(userID));\r\n            statement.setString(2, String.valueOf(courseID));\r\n            ResultSet resultSet = statement.executeQuery();\r\n\r\n            if(resultSet.next()){\r\n                return resultSet.getInt(\"count\") > 0;\r\n            }\r\n        } catch (SQLException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public boolean enrollLearner(int learnerID, int courseID){\r\n        String query = \"INSERT INTO Enrollment (LearnerID, CourseID) VALUES (?, ?)\";\r\n\r\n        try(PreparedStatement preparedStatement = connection.prepareStatement(query)){\r\n            preparedStatement.setInt(1, learnerID);\r\n            preparedStatement.setInt(2, courseID);\r\n\r\n            int change = preparedStatement.executeUpdate();\r\n            System.out.println(change);\r\n            return change > 0;\r\n        } catch (SQLException e) {\r\n            System.out.println(\"SQL Error sa enroll: \" + e.getMessage());\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Database/EnrollmentDatabase.java b/src/main/java/com/example/Database/EnrollmentDatabase.java
--- a/src/main/java/com/example/Database/EnrollmentDatabase.java	(revision 1a69fac0a2e9bdfe2f6c5c9705059d14addbea55)
+++ b/src/main/java/com/example/Database/EnrollmentDatabase.java	(date 1733067423141)
@@ -3,6 +3,8 @@
 import com.example.Login_SignUp.LoggedInUser;
 
 import java.sql.*;
+import java.util.ArrayList;
+import java.util.List;
 
 public  class EnrollmentDatabase extends UtilityDatabase{
 
@@ -16,6 +18,7 @@
             statement.setString(1, String.valueOf(studentID));
             ResultSet resultSet = statement.executeQuery();
 
+
             if(resultSet.next()){
                 return String.valueOf(resultSet.getInt("courseCTR"));
             }
@@ -25,6 +28,24 @@
         }
         return null;
     }
+    public int[] getMyCourse(int UID){
+        List<Integer> courses = new ArrayList<Integer>();
+        try {
+            if(connection == null)throw new SQLException();
+            String selectQuery = "SELECT CourseID FROM enrollment WHERE LearnerID = ?";
+            PreparedStatement selectStmt = connection.prepareStatement(selectQuery);
+            selectStmt.setString(1, String.valueOf(UID));
+            ResultSet resultSet = selectStmt.executeQuery();
+
+            while (resultSet.next()) {
+                courses.add(Integer.parseInt(resultSet.getString("CourseID")));
+             }
+
+        } catch (SQLException e) {
+            e.printStackTrace();
+        }
+        return courses.stream().mapToInt(Integer::intValue).toArray();
+    }
     public boolean checkIfEnrolled(int userID, int courseID){
         String query = "SELECT COUNT(*) AS count FROM enrollment WHERE LearnerID = ? AND CourseID = ?;";
         try{
Index: src/main/java/com/example/Database/CoursesDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Database;\r\n\r\nimport javafx.scene.image.Image;\r\n\r\nimport java.io.*;\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class CoursesDatabase extends UtilityDatabase {\r\n\r\n    private String courseTitle;\r\n    private String category1;\r\n    private String category2;\r\n    private String category3;\r\n    private String shortDescription;\r\n\r\n    public String getCourseTitle() {\r\n        return courseTitle;\r\n    }\r\n    public String getCategory1() {\r\n        return category1;\r\n    }\r\n    public String getCategory2() {\r\n        return category2;\r\n    }\r\n    public String getCategory3() {\r\n        return category3;\r\n    }\r\n    public String getShortDescription() {\r\n        return shortDescription;\r\n    }\r\n\r\n    public CoursesDatabase(String courseTitle, String category1, String category2, String category3, String shortDescription) throws SQLException {\r\n        super();\r\n        this.courseTitle = courseTitle;\r\n        this.category1 = category1;\r\n        this.category2 = category2;\r\n        this.category3 = category3;\r\n        this.shortDescription = shortDescription;\r\n    }\r\n\r\n    public CoursesDatabase(){\r\n        super();\r\n    }\r\n\r\n    public void insertData(String id, File courseImage) {\r\n        try {\r\n            System.out.println(\"Connected to the database!\");\r\n            String insertQuery = \"INSERT INTO courses (instructor_id, course_title, category_1, category_2, category_3, short_description, course_image) VALUES (?, ?, ?, ?, ?, ?, ?)\";\r\n            try (PreparedStatement insertStmt = connection.prepareStatement(insertQuery)) {\r\n                insertStmt.setString(1, id);\r\n                insertStmt.setString(2, courseTitle);\r\n                insertStmt.setString(3, category1);\r\n                insertStmt.setString(4, category2);\r\n                insertStmt.setString(5, category3);\r\n                insertStmt.setString(6, shortDescription);\r\n                FileInputStream fileInputStream = new FileInputStream(courseImage);\r\n                insertStmt.setBinaryStream(7, fileInputStream, (int)courseImage.length());\r\n                insertStmt.executeUpdate();\r\n                System.out.println(\"Course info data inserted successfully!\");\r\n            } catch (FileNotFoundException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static boolean maxCoursesReached(String id) throws SQLException {\r\n        int ctr = 0;\r\n        try {\r\n            String selectQuery = \"SELECT instructor_id FROM courses\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    if(resultSet.getString(\"instructor_id\").equals(id)) ctr++;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        if(ctr == 3) return true;\r\n        return false;\r\n    }\r\n\r\n    public static int numberOfCourses() {\r\n        int ctr = 0;\r\n        try {\r\n            String selectQuery = \"SELECT instructor_id FROM courses\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    ctr++;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return ctr;\r\n    };\r\n\r\n    public int getCID(String title){\r\n        try{\r\n            System.out.println(\"hello \");\r\n            String query = \"SELECT course_ID FROM courses WHERE course_title = ?\";\r\n            PreparedStatement preparedStatement = connection.prepareStatement(query);\r\n            preparedStatement.setString(1, title);\r\n            ResultSet resultSet = preparedStatement.executeQuery();\r\n\r\n            if(resultSet.next()){\r\n                return resultSet.getInt(\"course_ID\");\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return -1;\r\n    }\r\n\r\n//    public static void main(String[] args) {\r\n//        CoursesDatabase coursesDatabase = new CoursesDatabase();\r\n//        System.out.println(coursesDatabase.getCID(\"course1\"));\r\n//    }\r\n\r\n    //fetches course info\r\n    public static String getCourseTitle(int ctr) {\r\n        String courseTitle = \"\";\r\n        String instructorName = \"\";\r\n        int instructor_id;\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String selectQuery = \"SELECT course_title, instructor_id FROM courses\";\r\n            String selectQuery2 = \"SELECT LastName, FirstName, MiddleName FROM instructors\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n                    for(int i  = 0; i <= ctr; i++) {\r\n                        resultSet.next();\r\n                    }\r\n                    courseTitle = resultSet.getString(\"course_title\");\r\n                    instructor_id = Integer.parseInt(resultSet.getString(\"instructor_id\"));\r\n                }\r\n            try(Statement selectStmt = connection.createStatement();\r\n                ResultSet resultSet2 = selectStmt.executeQuery(selectQuery2)) {\r\n                    for(int i = 1; i <= instructor_id; i++) {\r\n                        resultSet2.next();\r\n                    }\r\n                    instructorName += resultSet2.getString(\"FirstName\") + \" \";\r\n                    instructorName += resultSet2.getString(\"MiddleName\") + \" \";\r\n                    instructorName += resultSet2.getString(\"LastName\") + \" \";\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return courseTitle + \" - \" + instructorName;\r\n    };\r\n\r\n    public static int[] numberOfCourses() {\r\n        List<Integer> courses = new ArrayList<Integer>();\r\n        try {\r\n            if(connection == null)throw new SQLException();\r\n            String selectQuery = \"SELECT course_ID FROM courses\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    courses.add(Integer.parseInt(resultSet.getString(\"course_ID\")));\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return courses.stream().mapToInt(Integer::intValue).toArray();\r\n    }\r\n\r\n    public static CoursesDatabase getCourseData(String id) {\r\n        CoursesDatabase courseData = null;\r\n        try {\r\n            if(connection == null) throw new SQLException(\"Exception in getting course data\");\r\n            String selectQuery = \"SELECT course_title, category_1, category_2, category_3, short_description \" +\r\n                    \"FROM courses WHERE course_ID = ?\";\r\n            try (PreparedStatement selectStmt = connection.prepareStatement(selectQuery)) {\r\n                selectStmt.setString(1, id);\r\n                try (ResultSet resultSet = selectStmt.executeQuery()) {\r\n                    if (resultSet.next()) {\r\n                        String courseTitle = resultSet.getString(\"course_title\");\r\n                        String category1 = resultSet.getString(\"category_1\");\r\n                        String category2 = resultSet.getString(\"category_2\");\r\n                        String category3 = resultSet.getString(\"category_3\");\r\n                        String shortDescription = resultSet.getString(\"short_description\");\r\n\r\n                        courseData = new CoursesDatabase(courseTitle, category1, category2, category3, shortDescription);\r\n                    }\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return courseData;\r\n    }\r\n\r\n    public static Image getImage(String id) {\r\n        try {\r\n            if(connection == null) throw new SQLException(\"Exception in getting course image\");\r\n            String selectQuery = \"SELECT course_image FROM courses WHERE course_ID = ?\";\r\n            try (PreparedStatement selectStmt = connection.prepareStatement(selectQuery)) {\r\n                selectStmt.setString(1, id);\r\n                try (ResultSet resultSet = selectStmt.executeQuery()) {\r\n                    if (resultSet.next()) {\r\n                        InputStream inputStream = resultSet.getBinaryStream(\"course_image\");\r\n                        return new Image(inputStream);\r\n                    }\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Database/CoursesDatabase.java b/src/main/java/com/example/Database/CoursesDatabase.java
--- a/src/main/java/com/example/Database/CoursesDatabase.java	(revision 1a69fac0a2e9bdfe2f6c5c9705059d14addbea55)
+++ b/src/main/java/com/example/Database/CoursesDatabase.java	(date 1733065650444)
@@ -85,22 +85,6 @@
         return false;
     }
 
-    public static int numberOfCourses() {
-        int ctr = 0;
-        try {
-            String selectQuery = "SELECT instructor_id FROM courses";
-            try (Statement selectStmt = connection.createStatement();
-                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {
-
-                while (resultSet.next()) {
-                    ctr++;
-                }
-            }
-        } catch (SQLException e) {
-            e.printStackTrace();
-        }
-        return ctr;
-    };
 
     public int getCID(String title){
         try{
@@ -127,32 +111,19 @@
     //fetches course info
     public static String getCourseTitle(int ctr) {
         String courseTitle = "";
-        String instructorName = "";
-        int instructor_id;
         try (Connection connection = DriverManager.getConnection(url, username, password)) {
             String selectQuery = "SELECT course_title, instructor_id FROM courses";
-            String selectQuery2 = "SELECT LastName, FirstName, MiddleName FROM instructors";
             try (Statement selectStmt = connection.createStatement();
                  ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {
-                    for(int i  = 0; i <= ctr; i++) {
-                        resultSet.next();
-                    }
-                    courseTitle = resultSet.getString("course_title");
-                    instructor_id = Integer.parseInt(resultSet.getString("instructor_id"));
-                }
-            try(Statement selectStmt = connection.createStatement();
-                ResultSet resultSet2 = selectStmt.executeQuery(selectQuery2)) {
-                    for(int i = 1; i <= instructor_id; i++) {
-                        resultSet2.next();
-                    }
-                    instructorName += resultSet2.getString("FirstName") + " ";
-                    instructorName += resultSet2.getString("MiddleName") + " ";
-                    instructorName += resultSet2.getString("LastName") + " ";
+                for(int i  = 0; i <= ctr; i++) {
+                    resultSet.next();
+                }
+                courseTitle = resultSet.getString("course_title");
             }
         } catch (SQLException e) {
             e.printStackTrace();
         }
-        return courseTitle + " - " + instructorName;
+        return courseTitle;
     };
 
     public static int[] numberOfCourses() {
@@ -199,6 +170,8 @@
         return courseData;
     }
 
+
+
     public static Image getImage(String id) {
         try {
             if(connection == null) throw new SQLException("Exception in getting course image");
Index: src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.ScrollPane?>\r\n<?import javafx.scene.effect.Blend?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.layout.RowConstraints?>\r\n<?import javafx.scene.layout.StackPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<StackPane fx:id=\"studentDashBoardStackPane\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"720.0\" prefWidth=\"1080.0\" xmlns=\"http://javafx.com/javafx/23.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"com.example.Dashboard.StudentDashboardController\">\r\n   <children>\r\n      <AnchorPane fx:id=\"dashboardPanel\" prefHeight=\"720.0\" prefWidth=\"1080.0\" visible=\"false\">\r\n         <children>\r\n            <ImageView fitHeight=\"720.0\" fitWidth=\"1080.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/bg.png\" />\r\n               </image>\r\n            </ImageView>\r\n            <AnchorPane layoutX=\"298.0\" layoutY=\"93.0\" prefHeight=\"256.0\" prefWidth=\"328.0\" style=\"-fx-background-color: #8FC7FF;\">\r\n               <children>\r\n                  <Text fx:id=\"coursesEnrolledCTR\" fill=\"WHITE\" layoutX=\"104.0\" layoutY=\"130.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" textAlignment=\"CENTER\" wrappingWidth=\"108.91699218749989\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"47.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <Text fill=\"DODGERBLUE\" layoutX=\"104.0\" layoutY=\"184.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"courses\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"31.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <Text fill=\"WHITE\" layoutX=\"98.0\" layoutY=\"215.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"enrolled\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"31.0\" />\r\n                     </font>\r\n                  </Text>\r\n               </children>\r\n            </AnchorPane>\r\n            <Text layoutX=\"544.0\" layoutY=\"63.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Dash\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"47.0\" />\r\n               </font>\r\n            </Text>\r\n            <Text fill=\"DODGERBLUE\" layoutX=\"651.0\" layoutY=\"63.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Board\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"47.0\" />\r\n               </font>\r\n            </Text>\r\n            <AnchorPane layoutX=\"696.0\" layoutY=\"93.0\" prefHeight=\"256.0\" prefWidth=\"328.0\" style=\"-fx-background-color: #8FC7FF;\">\r\n               <children>\r\n                  <Text fx:id=\"meetingsTodayCTR\" fill=\"WHITE\" layoutX=\"163.0\" layoutY=\"116.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"47.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <Text fill=\"DODGERBLUE\" layoutX=\"97.0\" layoutY=\"188.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"meetings\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"31.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <Text fill=\"WHITE\" layoutX=\"122.0\" layoutY=\"218.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"today\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"31.0\" />\r\n                     </font>\r\n                  </Text>\r\n               </children>\r\n            </AnchorPane>\r\n            <AnchorPane layoutX=\"298.0\" layoutY=\"399.0\" prefHeight=\"256.0\" prefWidth=\"739.0\" style=\"-fx-background-color: #8FC7FF;\">\r\n               <children>\r\n                  <Text fx:id=\"dashboardFirstName\" fill=\"WHITE\" layoutX=\"235.0\" layoutY=\"82.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"FirstName\" wrappingWidth=\"463.0\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"24.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <Text fx:id=\"dashboardUniversity\" fill=\"#ffffffb5\" layoutX=\"235.0\" layoutY=\"105.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"univ\" wrappingWidth=\"269.0000305175781\">\r\n                     <font>\r\n                        <Font name=\"System Italic\" size=\"18.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <Text fx:id=\"dashboardEmail\" fill=\"#ffffffb5\" layoutX=\"235.0\" layoutY=\"125.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Email\" wrappingWidth=\"406.56982421875\">\r\n                     <font>\r\n                        <Font size=\"18.0\" />\r\n                     </font>\r\n                  </Text>\r\n                  <ImageView fitHeight=\"189.0\" fitWidth=\"188.0\" layoutX=\"24.0\" layoutY=\"33.0\" pickOnBounds=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../../../images/noehpp.jpg\" />\r\n                     </image></ImageView>\r\n                  <Text fx:id=\"dashboardLastName\" fill=\"WHITE\" layoutX=\"235.0\" layoutY=\"55.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"LastName\" wrappingWidth=\"435.0\">\r\n                     <font>\r\n                        <Font name=\"System Bold\" size=\"24.0\" />\r\n                     </font>\r\n                  </Text>\r\n               </children>\r\n            </AnchorPane>\r\n         </children>\r\n      </AnchorPane>\r\n      <AnchorPane fx:id=\"myCoursesPanel\" prefHeight=\"720.0\" prefWidth=\"1080.0\">\r\n         <children>\r\n            <ImageView fitHeight=\"720.0\" fitWidth=\"1080.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/bg.png\" />\r\n               </image>\r\n            </ImageView>\r\n            <Text layoutX=\"550.0\" layoutY=\"63.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"My\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"47.0\" />\r\n               </font>\r\n            </Text>\r\n            <Text fill=\"DODGERBLUE\" layoutX=\"630.0\" layoutY=\"63.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Courses\">\r\n               <font>\r\n                  <Font name=\"System Bold\" size=\"47.0\" />\r\n               </font>\r\n            </Text>\r\n            <ScrollPane fx:id=\"browseScrollPane1\" hbarPolicy=\"NEVER\" layoutX=\"277.0\" layoutY=\"21.0\" prefHeight=\"695.0\" prefWidth=\"798.0\">\r\n               <content>\r\n                  <Pane fx:id=\"myCourseWrapperPane\" prefHeight=\"691.0\" prefWidth=\"787.0\">\r\n                     <children>\r\n                        <GridPane fx:id=\"myCoursesGridPane\" layoutX=\"4.0\" layoutY=\"3.0\" prefHeight=\"660.0\" prefWidth=\"782.0\">\r\n                           <columnConstraints>\r\n                              <ColumnConstraints hgrow=\"NEVER\" minWidth=\"390.0\" prefWidth=\"390.0\" />\r\n                              <ColumnConstraints hgrow=\"NEVER\" minWidth=\"390.0\" prefWidth=\"390.0\" />\r\n                           </columnConstraints>\r\n                           <rowConstraints>\r\n                              <RowConstraints minHeight=\"220.0\" prefHeight=\"220.0\" vgrow=\"NEVER\" />\r\n                           </rowConstraints>\r\n                        </GridPane>\r\n                     </children>\r\n                  </Pane>\r\n               </content>\r\n            </ScrollPane>\r\n         </children>\r\n      </AnchorPane>\r\n      <AnchorPane fx:id=\"browseCoursesPanel\" prefHeight=\"702.0\" prefWidth=\"727.0\" visible=\"false\">\r\n         <children>\r\n            <ImageView fitHeight=\"720.0\" fitWidth=\"1080.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/bg.png\" />\r\n               </image>\r\n            </ImageView>\r\n            <ScrollPane fx:id=\"browseScrollPane\" hbarPolicy=\"NEVER\" layoutX=\"267.0\" layoutY=\"11.0\" prefHeight=\"695.0\" prefWidth=\"798.0\">\r\n               <content>\r\n                  <Pane fx:id=\"browseCourseWrapperPane\" prefHeight=\"691.0\" prefWidth=\"787.0\">\r\n                     <children>\r\n                        <GridPane fx:id=\"browseCourseGridPane\" layoutX=\"4.0\" layoutY=\"3.0\" prefHeight=\"660.0\" prefWidth=\"782.0\">\r\n                          <columnConstraints>\r\n                            <ColumnConstraints hgrow=\"NEVER\" minWidth=\"390.0\" prefWidth=\"390.0\" />\r\n                            <ColumnConstraints hgrow=\"NEVER\" minWidth=\"390.0\" prefWidth=\"390.0\" />\r\n                          </columnConstraints>\r\n                          <rowConstraints>\r\n                            <RowConstraints minHeight=\"220.0\" prefHeight=\"220.0\" vgrow=\"NEVER\" />\r\n<!--                            <RowConstraints minHeight=\"220.0\" prefHeight=\"220.0\" vgrow=\"NEVER\" />-->\r\n<!--                            <RowConstraints minHeight=\"220.0\" prefHeight=\"220.0\" vgrow=\"NEVER\" />-->\r\n                          </rowConstraints>\r\n                        </GridPane>\r\n                     </children>\r\n                  </Pane>\r\n               </content>\r\n            </ScrollPane>\r\n         </children>\r\n      </AnchorPane>\r\n      <AnchorPane fx:id=\"interfacePanel\" maxWidth=\"260.0\" prefHeight=\"720.0\" prefWidth=\"260.0\" StackPane.alignment=\"TOP_LEFT\">\r\n         <effect>\r\n            <Blend />\r\n         </effect>\r\n         <children>\r\n            <ImageView fitHeight=\"720.0\" fitWidth=\"260.0\" layoutX=\"-1.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/navigationpanel.png\" />\r\n               </image>\r\n               <effect>\r\n                  <Blend />\r\n               </effect>\r\n            </ImageView>\r\n            <Button fx:id=\"dashboardBtn\" layoutX=\"17.0\" layoutY=\"140.0\" mnemonicParsing=\"false\" prefHeight=\"49.0\" prefWidth=\"226.0\" style=\"-fx-background-color: #8FC7FF;\" text=\"     Dashboard\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"browseBtn\" layoutX=\"15.0\" layoutY=\"223.0\" mnemonicParsing=\"false\" prefHeight=\"49.0\" prefWidth=\"226.0\" style=\"-fx-background-color: #8FC7FF;\" text=\"          Browse Courses\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"myCoursesBtn\" layoutX=\"15.0\" layoutY=\"310.0\" mnemonicParsing=\"false\" prefHeight=\"49.0\" prefWidth=\"226.0\" style=\"-fx-background-color: #8FC7FF;\" text=\"       My Courses\" textFill=\"WHITE\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <ImageView fitHeight=\"44.0\" fitWidth=\"48.0\" layoutX=\"46.0\" layoutY=\"143.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/1.png\" />\r\n               </image>\r\n            </ImageView>\r\n            <ImageView fitHeight=\"44.0\" fitWidth=\"48.0\" layoutX=\"40.0\" layoutY=\"225.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/courses.png\" />\r\n               </image>\r\n            </ImageView>\r\n            <ImageView fitHeight=\"44.0\" fitWidth=\"48.0\" layoutX=\"44.0\" layoutY=\"314.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n               <image>\r\n                  <Image url=\"@../../../images/2.png\" />\r\n               </image>\r\n            </ImageView>\r\n         </children>\r\n      </AnchorPane>\r\n   </children>\r\n</StackPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml b/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml
--- a/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml	(revision 1a69fac0a2e9bdfe2f6c5c9705059d14addbea55)
+++ b/src/main/resources/com/example/Login_SignUp/StudentDashboard.fxml	(date 1733064092567)
@@ -118,7 +118,7 @@
                   <Font name="System Bold" size="47.0" />
                </font>
             </Text>
-            <ScrollPane fx:id="browseScrollPane1" hbarPolicy="NEVER" layoutX="277.0" layoutY="21.0" prefHeight="695.0" prefWidth="798.0">
+            <ScrollPane fx:id="myCourseScrollPane" hbarPolicy="NEVER" layoutX="277.0" layoutY="21.0" prefHeight="695.0" prefWidth="798.0">
                <content>
                   <Pane fx:id="myCourseWrapperPane" prefHeight="691.0" prefWidth="787.0">
                      <children>
Index: src/main/java/com/example/Dashboard/StudentDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Dashboard;\r\n\r\nimport com.example.Database.*;\r\nimport com.example.Course_content.Course_Info;\r\nimport com.example.Course_content.Course_Info_Controller;\r\nimport com.example.Login_SignUp.LoggedInUser;\r\nimport javafx.fxml.FXML;\r\nimport javafx.geometry.Rectangle2D;\r\nimport javafx.scene.Cursor;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Text;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.text.TextAlignment;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.sql.SQLException;\r\n\r\n\r\npublic class StudentDashboardController {\r\n    @FXML\r\n    private StackPane studentDashBoardStackPane;\r\n    @FXML\r\n    private Text coursesEnrolledCTR;\r\n    @FXML\r\n    private ScrollPane browseScrollPane;\r\n    @FXML\r\n    private Button dashboardBtn;\r\n    @FXML\r\n    private Button browseBtn;\r\n    @FXML\r\n    private Button myCoursesBtn;\r\n    @FXML\r\n    private Pane browseCourseWrapperPane;\r\n    @FXML\r\n    private Text dashboardEmail;\r\n    @FXML\r\n    private GridPane browseCourseGridPane;\r\n    @FXML\r\n    private Text dashboardFirstName;\r\n    @FXML\r\n    private Text dashboardLastName;\r\n    @FXML\r\n    private Pane browseCourseInnerGridPane;\r\n    @FXML\r\n    private AnchorPane interfacePanel;\r\n    @FXML\r\n    private AnchorPane dashboardPanel;\r\n    @FXML\r\n    private AnchorPane myCoursesPanel;\r\n    @FXML\r\n    private AnchorPane browseCoursesPanel;\r\n    @FXML\r\n    private Text dashboardUniversity;\r\n    @FXML\r\n    private Text meetingsTodayCTR;\r\n    @FXML\r\n    private ScrollPane myCourseScrollPane;\r\n    @FXML\r\n    private Pane myCourseWrapperPane;\r\n    @FXML\r\n    private GridPane myCoursesGridPane;\r\n\r\n    private int coursesCtr = 0;\r\n    private int gridCtr = 0;\r\n    private int row = 0;\r\n    private final double rowHeight = 220.0;\r\n    private final double columnWidth = 390.0;\r\n    private static final double innerPaneSize = 50.0;\r\n\r\n    private void createBrowseCourses(int[] courses) {\r\n        for(int i : courses) {\r\n            System.out.println(\"addRow pressed and row is \" + row);\r\n            Pane outerPane = new Pane();\r\n            outerPane.setPrefSize(columnWidth, rowHeight);\r\n            int finalI = i;\r\n\r\n            browseCourseGridPane.add(outerPane, gridCtr++, row);\r\n\r\n            Pane innerPane = new Pane();\r\n            innerPane.setPrefSize(370, 192);\r\n            Image courseImage = CoursesDatabase.getImage(Integer.toString(finalI));\r\n            innerPane.setStyle(\"-fx-background-radius: 10; -fx-background-color: blue;\");\r\n            innerPane.layoutXProperty().bind(outerPane.widthProperty().subtract(innerPane.prefWidthProperty()).divide(2));\r\n            innerPane.layoutYProperty().bind(outerPane.heightProperty().subtract(innerPane.prefHeightProperty()).divide(2));\r\n            innerPane.setCursor(Cursor.HAND);\r\n            outerPane.getChildren().add(innerPane);\r\n\r\n            ImageView courseProfile = new ImageView();\r\n            courseProfile.setFitWidth(370);\r\n            courseProfile.setFitHeight(192);\r\n            courseProfile.setPreserveRatio(true);\r\n            courseProfile.setSmooth(true);\r\n            courseProfile.setImage(courseImage);\r\n            double scale = Math.max(370 / courseImage.getWidth(), 192 / courseImage.getHeight());\r\n            double viewportWidth = 370 / scale;\r\n            double viewportHeight = 192 / scale;\r\n            double viewportX = (courseImage.getWidth() - viewportWidth) / 2;\r\n            double viewportY = (courseImage.getHeight() - viewportHeight) / 2;\r\n            courseProfile.setViewport(new Rectangle2D(viewportX, viewportY, viewportWidth, viewportHeight));\r\n            Rectangle clip = new Rectangle(370, 192);\r\n            clip.setArcWidth(20);\r\n            clip.setArcHeight(20);\r\n            courseProfile.setClip(clip);\r\n            innerPane.getChildren().add(courseProfile);\r\n\r\n            Pane innerDesignPane = new Pane();\r\n            innerPane.setId(\"innerPane\"+i);\r\n            innerDesignPane.setPrefSize(370, 73);\r\n            innerDesignPane.setStyle(\"-fx-background-radius: 0 0 10 10; -fx-background-color: white;\");\r\n            innerDesignPane.layoutYProperty().bind(innerPane.heightProperty().subtract(innerDesignPane.prefHeightProperty()));\r\n            innerPane.getChildren().add(innerDesignPane);\r\n\r\n\r\n            Text courseTitle = new Text();\r\n            courseTitle.setWrappingWidth(345);\r\n            courseTitle.layoutXProperty().bind(innerDesignPane.widthProperty().subtract(courseTitle.wrappingWidthProperty()).divide(2));\r\n            courseTitle.layoutYProperty().bind(innerDesignPane.heightProperty().subtract(courseTitle.getBoundsInLocal().getHeight()).divide(2));\r\n            courseTitle.setText(CoursesDatabase.getCourseTitle(i-1));\r\n            courseTitle.setTextAlignment(TextAlignment.CENTER);\r\n            courseTitle.setStyle(\"-fx-font-size: 14px; -fx-font-weight: bold;\");\r\n            innerDesignPane.getChildren().add(courseTitle);\r\n\r\n            RowConstraints rowConstraints = new RowConstraints();\r\n            rowConstraints.setMinHeight(220.0);\r\n            rowConstraints.setPrefHeight(220.0);\r\n            rowConstraints.setVgrow(javafx.scene.layout.Priority.NEVER);\r\n\r\n            double newHeight = (row + 1) * rowHeight;\r\n            browseCourseWrapperPane.setPrefHeight(newHeight);\r\n            System.out.println(\"i is \" + i);\r\n\r\n            innerPane.setOnMouseClicked(event -> {\r\n                String id;\r\n                try {\r\n                    id = new InstructorDatabase().getInstructorID(Integer.toString(finalI));\r\n                } catch (SQLException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                System.out.println(\"final I is \" + finalI);\r\n                String[] strArr = CoursesDatabase.getCourseTitle(finalI-1).split(\" - \");\r\n                Course_Info_Controller.setNameAndTitle(strArr[0], strArr[1], id, Integer.toString(finalI));\r\n                Stage courseInfoStage = new Stage();\r\n                Course_Info courseInfo = new Course_Info();\r\n                try {\r\n                    courseInfo.start(courseInfoStage);\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                courseInfoStage = (Stage) studentDashBoardStackPane.getScene().getWindow();\r\n                courseInfoStage.close();\r\n            });\r\n\r\n            browseCourseGridPane.getRowConstraints().add(rowConstraints);\r\n            if (gridCtr == 2) {\r\n                gridCtr = 0;\r\n                row++;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void createMyCourses(int coursesCtr) {\r\n        for(int i = 0; i <= coursesCtr; i++) {\r\n            System.out.println(\"addRow pressed and row is \" + row);\r\n            Pane outerPane = new Pane();\r\n            outerPane.setPrefSize(columnWidth, rowHeight);\r\n\r\n            myCoursesGridPane.add(outerPane, gridCtr++, row);\r\n\r\n            Pane innerPane = new Pane();\r\n            innerPane.setPrefSize(370, 192);\r\n            innerPane.setStyle(\"-fx-background-radius: 10; -fx-background-color: #1e90ff;\");\r\n            innerPane.layoutXProperty().bind(outerPane.widthProperty().subtract(innerPane.prefWidthProperty()).divide(2));\r\n            innerPane.layoutYProperty().bind(outerPane.heightProperty().subtract(innerPane.prefHeightProperty()).divide(2));\r\n            innerPane.setCursor(Cursor.HAND);\r\n            outerPane.getChildren().add(innerPane);\r\n\r\n            Pane innerDesignPane = new Pane();\r\n            innerPane.setId(\"innerPane\"+i);\r\n            innerDesignPane.setPrefSize(370, 73);\r\n            innerDesignPane.setStyle(\"-fx-background-radius: 0 0 10 10; -fx-background-color: white;\");\r\n            innerDesignPane.layoutYProperty().bind(innerPane.heightProperty().subtract(innerDesignPane.prefHeightProperty()));\r\n            innerPane.getChildren().add(innerDesignPane);\r\n\r\n            Label courseTitle = new Label();\r\n            courseTitle.setPrefSize(345, 58);\r\n            courseTitle.layoutXProperty().bind(innerDesignPane.widthProperty().subtract(courseTitle.prefWidthProperty()).divide(2));\r\n            courseTitle.layoutYProperty().bind(innerDesignPane.heightProperty().subtract(courseTitle.prefHeightProperty()).divide(2));\r\n            courseTitle.setText(CoursesDatabase.getCourseTitle(i));\r\n            courseTitle.setAlignment(Pos.CENTER);\r\n            courseTitle.setStyle(\"-fx-font-size: 14px; -fx-font-weight: bold;\");\r\n            innerDesignPane.getChildren().add(courseTitle);\r\n\r\n            RowConstraints rowConstraints = new RowConstraints();\r\n            rowConstraints.setMinHeight(220.0);\r\n            rowConstraints.setPrefHeight(220.0);\r\n            rowConstraints.setVgrow(javafx.scene.layout.Priority.NEVER);\r\n\r\n            double newHeight = (row + 1) * rowHeight;\r\n            myCourseWrapperPane.setPrefHeight(newHeight);\r\n            System.out.println(\"i is \" + i);\r\n            int finalI = i;\r\n\r\n            innerPane.setOnMouseClicked(event -> {\r\n                String id;\r\n                try {\r\n                    id = new InstructorDatabase().getInstructorID(Integer.toString(finalI));\r\n                } catch (SQLException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                System.out.println(\"final I is \" + finalI);\r\n                String[] strArr = CoursesDatabase.getCourseTitle(finalI).split(\" - \");\r\n                Course_Info_Controller.setNameAndTitle(strArr[0], strArr[1], id);\r\n                Stage courseInfoStage = new Stage();\r\n                Course_Info courseInfo = new Course_Info();\r\n                try {\r\n                    courseInfo.start(courseInfoStage);\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n                courseInfoStage = (Stage) studentDashBoardStackPane.getScene().getWindow();\r\n                courseInfoStage.close();\r\n            });\r\n\r\n            browseCourseGridPane.getRowConstraints().add(rowConstraints);\r\n            if (gridCtr == 2) {\r\n                gridCtr = 0;\r\n                row++;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public void setUserInfo(LoggedInUser loggedInUser, EnrollmentDatabase enrollmentDB){\r\n        coursesEnrolledCTR.setText(enrollmentDB.getCourseCTR(loggedInUser.getID()));\r\n        dashboardFirstName.setText(loggedInUser.getFirstName());\r\n        dashboardLastName.setText(loggedInUser.getLastName());\r\n        dashboardEmail.setText(loggedInUser.getEmail());\r\n        dashboardUniversity.setText(loggedInUser.getUniversity());\r\n    }\r\n    public void setDashboardPanelVisible(){\r\n        dashboardPanel.setVisible(true);\r\n        myCoursesPanel.setVisible(false);\r\n        browseCoursesPanel.setVisible(false);\r\n    }\r\n    public void setbrowseCoursesPanelVisible(){\r\n        dashboardPanel.setVisible(false);\r\n        myCoursesPanel.setVisible(false);\r\n        browseCoursesPanel.setVisible(true);\r\n    }\r\n    public void setMyCoursesPanelVisible(){\r\n        dashboardPanel.setVisible(false);\r\n        myCoursesPanel.setVisible(true);\r\n        browseCoursesPanel.setVisible(false);\r\n    }\r\n\r\n\r\n    public void initialize() throws SQLException {\r\n        LoggedInUser loggedInUser = LoggedInUser.getInstance();\r\n        EnrollmentDatabase enrollmentDB = new EnrollmentDatabase();\r\n\r\n        int[] courses = CoursesDatabase.numberOfCourses();\r\n        System.out.println(\"IDs of courses: \");\r\n        for(int s: courses) {\r\n            System.out.println(s);\r\n        }\r\n\r\n        interfacePanel.setVisible(true);\r\n        setDashboardPanelVisible();\r\n        setUserInfo(loggedInUser, enrollmentDB);\r\n        createBrowseCourses(InstructorsInfoDatabase.numberOfCourses());\r\n\r\n        dashboardBtn.setOnAction(actionEvent -> setDashboardPanelVisible());\r\n        myCoursesBtn.setOnAction(actionEvent -> setMyCoursesPanelVisible());\r\n        browseBtn.setOnAction(actionEvent -> setbrowseCoursesPanelVisible());\r\n\r\n\r\n\r\n        createBrowseCourses(courses);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/Dashboard/StudentDashboardController.java b/src/main/java/com/example/Dashboard/StudentDashboardController.java
--- a/src/main/java/com/example/Dashboard/StudentDashboardController.java	(revision 1a69fac0a2e9bdfe2f6c5c9705059d14addbea55)
+++ b/src/main/java/com/example/Dashboard/StudentDashboardController.java	(date 1733066820982)
@@ -61,29 +61,29 @@
     @FXML
     private ScrollPane myCourseScrollPane;
     @FXML
-    private Pane myCourseWrapperPane;
-    @FXML
     private GridPane myCoursesGridPane;
 
-    private int coursesCtr = 0;
     private int gridCtr = 0;
     private int row = 0;
     private final double rowHeight = 220.0;
     private final double columnWidth = 390.0;
-    private static final double innerPaneSize = 50.0;
+
+    private void createMyCourses(){
+        LoggedInUser loggedInUser = LoggedInUser.getInstance();
+        EnrollmentDatabase enrollmentDB = new EnrollmentDatabase();
 
-    private void createBrowseCourses(int[] courses) {
-        for(int i : courses) {
-            System.out.println("addRow pressed and row is " + row);
+        int[] courses = enrollmentDB.getMyCourse(loggedInUser.getID());
+        int courseCTR = 0;
+
+        for(int i : courses){
             Pane outerPane = new Pane();
-            outerPane.setPrefSize(columnWidth, rowHeight);
-            int finalI = i;
+            outerPane.setPrefSize(340, 170);
 
-            browseCourseGridPane.add(outerPane, gridCtr++, row);
+            myCoursesGridPane.add(outerPane, courseCTR++, row);
 
             Pane innerPane = new Pane();
-            innerPane.setPrefSize(370, 192);
-            Image courseImage = CoursesDatabase.getImage(Integer.toString(finalI));
+            innerPane.setPrefSize(300, 130);
+            Image courseImage = CoursesDatabase.getImage(Integer.toString(i));
             innerPane.setStyle("-fx-background-radius: 10; -fx-background-color: blue;");
             innerPane.layoutXProperty().bind(outerPane.widthProperty().subtract(innerPane.prefWidthProperty()).divide(2));
             innerPane.layoutYProperty().bind(outerPane.heightProperty().subtract(innerPane.prefHeightProperty()).divide(2));
@@ -91,18 +91,18 @@
             outerPane.getChildren().add(innerPane);
 
             ImageView courseProfile = new ImageView();
-            courseProfile.setFitWidth(370);
-            courseProfile.setFitHeight(192);
+            courseProfile.setFitWidth(300);
+            courseProfile.setFitHeight(130);
             courseProfile.setPreserveRatio(true);
             courseProfile.setSmooth(true);
             courseProfile.setImage(courseImage);
-            double scale = Math.max(370 / courseImage.getWidth(), 192 / courseImage.getHeight());
-            double viewportWidth = 370 / scale;
-            double viewportHeight = 192 / scale;
+            double scale = Math.max(300 / courseImage.getWidth(), 130 / courseImage.getHeight());
+            double viewportWidth = 300 / scale;
+            double viewportHeight = 130 / scale;
             double viewportX = (courseImage.getWidth() - viewportWidth) / 2;
             double viewportY = (courseImage.getHeight() - viewportHeight) / 2;
             courseProfile.setViewport(new Rectangle2D(viewportX, viewportY, viewportWidth, viewportHeight));
-            Rectangle clip = new Rectangle(370, 192);
+            Rectangle clip = new Rectangle(300, 130);
             clip.setArcWidth(20);
             clip.setArcHeight(20);
             courseProfile.setClip(clip);
@@ -115,7 +115,6 @@
             innerDesignPane.layoutYProperty().bind(innerPane.heightProperty().subtract(innerDesignPane.prefHeightProperty()));
             innerPane.getChildren().add(innerDesignPane);
 
-
             Text courseTitle = new Text();
             courseTitle.setWrappingWidth(345);
             courseTitle.layoutXProperty().bind(innerDesignPane.widthProperty().subtract(courseTitle.wrappingWidthProperty()).divide(2));
@@ -134,51 +133,45 @@
             browseCourseWrapperPane.setPrefHeight(newHeight);
             System.out.println("i is " + i);
 
-            innerPane.setOnMouseClicked(event -> {
-                String id;
-                try {
-                    id = new InstructorDatabase().getInstructorID(Integer.toString(finalI));
-                } catch (SQLException e) {
-                    throw new RuntimeException(e);
-                }
-                System.out.println("final I is " + finalI);
-                String[] strArr = CoursesDatabase.getCourseTitle(finalI-1).split(" - ");
-                Course_Info_Controller.setNameAndTitle(strArr[0], strArr[1], id, Integer.toString(finalI));
-                Stage courseInfoStage = new Stage();
-                Course_Info courseInfo = new Course_Info();
-                try {
-                    courseInfo.start(courseInfoStage);
-                } catch (Exception e) {
-                    throw new RuntimeException(e);
-                }
-                courseInfoStage = (Stage) studentDashBoardStackPane.getScene().getWindow();
-                courseInfoStage.close();
-            });
-
-            browseCourseGridPane.getRowConstraints().add(rowConstraints);
-            if (gridCtr == 2) {
-                gridCtr = 0;
-                row++;
-            }
         }
     }
 
-    private void createMyCourses(int coursesCtr) {
-        for(int i = 0; i <= coursesCtr; i++) {
+    private void createBrowseCourses(int[] courses) {
+        for(int i : courses) {
             System.out.println("addRow pressed and row is " + row);
             Pane outerPane = new Pane();
             outerPane.setPrefSize(columnWidth, rowHeight);
+            int finalI = i;
 
-            myCoursesGridPane.add(outerPane, gridCtr++, row);
+            browseCourseGridPane.add(outerPane, gridCtr++, row);
 
             Pane innerPane = new Pane();
             innerPane.setPrefSize(370, 192);
-            innerPane.setStyle("-fx-background-radius: 10; -fx-background-color: #1e90ff;");
+            Image courseImage = CoursesDatabase.getImage(Integer.toString(finalI));
+            innerPane.setStyle("-fx-background-radius: 10; -fx-background-color: blue;");
             innerPane.layoutXProperty().bind(outerPane.widthProperty().subtract(innerPane.prefWidthProperty()).divide(2));
             innerPane.layoutYProperty().bind(outerPane.heightProperty().subtract(innerPane.prefHeightProperty()).divide(2));
             innerPane.setCursor(Cursor.HAND);
             outerPane.getChildren().add(innerPane);
 
+            ImageView courseProfile = new ImageView();
+            courseProfile.setFitWidth(370);
+            courseProfile.setFitHeight(192);
+            courseProfile.setPreserveRatio(true);
+            courseProfile.setSmooth(true);
+            courseProfile.setImage(courseImage);
+            double scale = Math.max(370 / courseImage.getWidth(), 192 / courseImage.getHeight());
+            double viewportWidth = 370 / scale;
+            double viewportHeight = 192 / scale;
+            double viewportX = (courseImage.getWidth() - viewportWidth) / 2;
+            double viewportY = (courseImage.getHeight() - viewportHeight) / 2;
+            courseProfile.setViewport(new Rectangle2D(viewportX, viewportY, viewportWidth, viewportHeight));
+            Rectangle clip = new Rectangle(370, 192);
+            clip.setArcWidth(20);
+            clip.setArcHeight(20);
+            courseProfile.setClip(clip);
+            innerPane.getChildren().add(courseProfile);
+
             Pane innerDesignPane = new Pane();
             innerPane.setId("innerPane"+i);
             innerDesignPane.setPrefSize(370, 73);
@@ -186,12 +179,13 @@
             innerDesignPane.layoutYProperty().bind(innerPane.heightProperty().subtract(innerDesignPane.prefHeightProperty()));
             innerPane.getChildren().add(innerDesignPane);
 
-            Label courseTitle = new Label();
-            courseTitle.setPrefSize(345, 58);
-            courseTitle.layoutXProperty().bind(innerDesignPane.widthProperty().subtract(courseTitle.prefWidthProperty()).divide(2));
-            courseTitle.layoutYProperty().bind(innerDesignPane.heightProperty().subtract(courseTitle.prefHeightProperty()).divide(2));
-            courseTitle.setText(CoursesDatabase.getCourseTitle(i));
-            courseTitle.setAlignment(Pos.CENTER);
+
+            Text courseTitle = new Text();
+            courseTitle.setWrappingWidth(345);
+            courseTitle.layoutXProperty().bind(innerDesignPane.widthProperty().subtract(courseTitle.wrappingWidthProperty()).divide(2));
+            courseTitle.layoutYProperty().bind(innerDesignPane.heightProperty().subtract(courseTitle.getBoundsInLocal().getHeight()).divide(2));
+            courseTitle.setText(CoursesDatabase.getCourseTitle(i-1));
+            courseTitle.setTextAlignment(TextAlignment.CENTER);
             courseTitle.setStyle("-fx-font-size: 14px; -fx-font-weight: bold;");
             innerDesignPane.getChildren().add(courseTitle);
 
@@ -201,9 +195,8 @@
             rowConstraints.setVgrow(javafx.scene.layout.Priority.NEVER);
 
             double newHeight = (row + 1) * rowHeight;
-            myCourseWrapperPane.setPrefHeight(newHeight);
+            browseCourseWrapperPane.setPrefHeight(newHeight);
             System.out.println("i is " + i);
-            int finalI = i;
 
             innerPane.setOnMouseClicked(event -> {
                 String id;
@@ -213,8 +206,8 @@
                     throw new RuntimeException(e);
                 }
                 System.out.println("final I is " + finalI);
-                String[] strArr = CoursesDatabase.getCourseTitle(finalI).split(" - ");
-                Course_Info_Controller.setNameAndTitle(strArr[0], strArr[1], id);
+                String[] strArr = CoursesDatabase.getCourseTitle(finalI-1).split(" - ");
+                Course_Info_Controller.setNameAndTitle(strArr[0], strArr[1], id, Integer.toString(finalI));
                 Stage courseInfoStage = new Stage();
                 Course_Info courseInfo = new Course_Info();
                 try {
@@ -235,6 +228,8 @@
     }
 
 
+
+
     public void setUserInfo(LoggedInUser loggedInUser, EnrollmentDatabase enrollmentDB){
         coursesEnrolledCTR.setText(enrollmentDB.getCourseCTR(loggedInUser.getID()));
         dashboardFirstName.setText(loggedInUser.getFirstName());
@@ -272,15 +267,13 @@
         interfacePanel.setVisible(true);
         setDashboardPanelVisible();
         setUserInfo(loggedInUser, enrollmentDB);
-        createBrowseCourses(InstructorsInfoDatabase.numberOfCourses());
+        createBrowseCourses(courses);
+        createMyCourses();
 
         dashboardBtn.setOnAction(actionEvent -> setDashboardPanelVisible());
         myCoursesBtn.setOnAction(actionEvent -> setMyCoursesPanelVisible());
         browseBtn.setOnAction(actionEvent -> setbrowseCoursesPanelVisible());
 
-
-
-        createBrowseCourses(courses);
     }
 }
 
