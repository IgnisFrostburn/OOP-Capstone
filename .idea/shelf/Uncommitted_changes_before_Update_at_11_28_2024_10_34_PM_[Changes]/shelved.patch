Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d25717de-1212-4a3e-bab7-a9d2bbaf4ffd\" name=\"Changes\" comment=\"&quot;Browse Courses&quot;\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/StudentDashboardController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/StudentDashboardController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/MainInterface/StudentDashboard.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/MainInterface/StudentDashboard.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.StudentDashboard.executor\": \"Run\",\r\n    \"git-widget-placeholder\": \"master\"\r\n  }\r\n}]]></component>\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"&quot;Browse Courses&quot;\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732770675846</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732770675846</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"&quot;Browse Courses&quot;\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"&quot;Browse Courses&quot;\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e00aabd0acec7ae9cd7892314892c633521537c9)
+++ b/.idea/workspace.xml	(date 1732790786942)
@@ -4,39 +4,185 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="d25717de-1212-4a3e-bab7-a9d2bbaf4ffd" name="Changes" comment="&quot;Browse Courses&quot;">
+    <list default="true" id="8bc4bd21-e2bf-499e-a356-7195176f21f6" name="Changes" comment="fixed student dashboard">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/DatabaseConnection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/DatabaseConnection.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/InstructorDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/InstructorDatabase.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LearnerDatabase.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LearnerDatabase.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoggedInUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoggedInUser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoginPageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/LoginPageController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/StudentDashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Login_SignUp/StudentDashboardController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/MainInterface/StudentDashboard.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/MainInterface/StudentDashboard.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="FxmlFile" />
+        <option value="Class" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;IgnisFrostburn&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/IgnisFrostburn/OOP-Capstone.git&quot;,
+    &quot;accountId&quot;: &quot;0d04d356-f879-440a-9c2b-b4a203bebd0f&quot;
+  }
+}</component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
+  <component name="ProjectId" id="2pSLJJlkdlccTJHnYtwFVLf60Tv" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Application.LoginPageApplication.executor": "Run",
+    "Application.SignUpPage.executor": "Run",
     "Application.StudentDashboard.executor": "Run",
-    "git-widget-placeholder": "master"
+    "Application.StudentDashboardApplication.executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "master",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/Mcxine and Mckyla/IdeaProjects/MASTEROOP/src/main/resources/images"
   }
 }]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\Mcxine and Mckyla\IdeaProjects\MASTEROOP\src\main\resources\images" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="LoginPageApplication" type="Application" factoryName="Application">
+      <option name="MAIN_CLASS_NAME" value="com.example.Login_SignUp.LoginPageApplication" />
+      <module name="JavaFXDemo" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
-    <task id="LOCAL-00001" summary="&quot;Browse Courses&quot;">
+    <task id="LOCAL-00001" summary="&quot;Updated Database&quot;">
       <option name="closed" value="true" />
-      <created>1732770675846</created>
+      <created>1732684208959</created>
       <option name="number" value="00001" />
       <option name="presentableId" value="LOCAL-00001" />
       <option name="project" value="LOCAL" />
-      <updated>1732770675846</updated>
+      <updated>1732684208959</updated>
+    </task>
+    <task id="LOCAL-00002" summary="&quot;Updated Database&quot;">
+      <option name="closed" value="true" />
+      <created>1732684243392</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1732684243392</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00003" summary="&quot;Updated Database&quot;">
+      <option name="closed" value="true" />
+      <created>1732689869116</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1732689869116</updated>
+    </task>
+    <task id="LOCAL-00004" summary="&quot;Login to Main UI&quot;">
+      <option name="closed" value="true" />
+      <created>1732689963746</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1732689963746</updated>
+    </task>
+    <task id="LOCAL-00005" summary="&quot;Sign Up to Main UI&quot;">
+      <option name="closed" value="true" />
+      <created>1732691823705</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1732691823705</updated>
+    </task>
+    <task id="LOCAL-00006" summary="&quot;Sign Up to Main UI&quot;">
+      <option name="closed" value="true" />
+      <created>1732722578747</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1732722578747</updated>
+    </task>
+    <task id="LOCAL-00007" summary="added student dashboard">
+      <option name="closed" value="true" />
+      <created>1732723173083</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1732723173083</updated>
+    </task>
+    <task id="LOCAL-00008" summary="fixed student dashboard">
+      <option name="closed" value="true" />
+      <created>1732723686205</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1732723686205</updated>
+    </task>
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="8bc4bd21-e2bf-499e-a356-7195176f21f6" name="Changes" comment="fixed student dashboard" />
+      <created>1732754461587</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1732754461587</updated>
+    </task>
+    <option name="localTasksCounter" value="9" />
     <servers />
   </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State>
+              <option name="FILTERS">
+                <map>
+                  <entry key="branch">
+                    <value>
+                      <list>
+                        <option value="origin/master" />
+                      </list>
+                    </value>
+                  </entry>
+                </map>
+              </option>
+            </State>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="&quot;Browse Courses&quot;" />
-    <option name="LAST_COMMIT_MESSAGE" value="&quot;Browse Courses&quot;" />
+    <MESSAGE value="&quot;Database&quot;" />
+    <MESSAGE value="&quot;Updated Database&quot;" />
+    <MESSAGE value="&quot;Login to Main UI&quot;" />
+    <MESSAGE value="&quot;Sign Up to Main UI&quot;" />
+    <MESSAGE value="added student dashboard" />
+    <MESSAGE value="fixed student dashboard" />
+    <option name="LAST_COMMIT_MESSAGE" value="fixed student dashboard" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/com/example/Login_SignUp/StudentDashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Login_SignUp;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.text.Text;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.*;\r\n\r\nimport java.sql.SQLException;\r\n\r\n\r\npublic class StudentDashboardController {\r\n    @FXML\r\n    private StackPane studentDashBoardStackPane;\r\n    @FXML\r\n    private Text coursesEnrolledCTR;\r\n\r\n    @FXML\r\n    private ScrollPane browseScrollPane;\r\n    @FXML\r\n    private Button dashboardBtn;\r\n\r\n    @FXML\r\n    private Pane browseCourseWrapperPane;\r\n    @FXML\r\n    private Text dashboardEmail;\r\n    @FXML\r\n    private GridPane browseCourseGridPane;\r\n    @FXML\r\n    private Text dashboardName;\r\n    @FXML\r\n    private Pane browseCourseInnerGridPane;\r\n\r\n    @FXML\r\n    private Text dashboardUniversity;\r\n\r\n    @FXML\r\n    private Text meetingsTodayCTR;\r\n\r\n    private int instructorCtr = 0;\r\n    private int gridCtr = 0;\r\n    private int row = 0;\r\n    private final double rowHeight = 220.0;\r\n    private final double columnWidth = 390.0;\r\n    private static final double innerPaneSize = 50.0;\r\n\r\n    public void initialize() throws SQLException {\r\n        InstructorDatabase instructorDatabase = new InstructorDatabase();\r\n        instructorCtr = instructorDatabase.numberOfInstructors();\r\n        LearnerDatabase learnerDB = new LearnerDatabase();\r\n        coursesEnrolledCTR.setText(\"1\");\r\n        for(int i = 0; i < instructorCtr; i++) {\r\n            System.out.println(\"addRow pressed and row is \" + row);\r\n            Pane outerPane = new Pane();\r\n            outerPane.setPrefSize(columnWidth, rowHeight);\r\n\r\n            Pane innerPane = new Pane();\r\n            innerPane.setPrefSize(370, 192);\r\n            innerPane.setStyle(\"-fx-background-radius: 10; -fx-background-color: blue;\");\r\n            innerPane.layoutXProperty().bind(outerPane.widthProperty().subtract(innerPane.prefWidthProperty()).divide(2));\r\n            innerPane.layoutYProperty().bind(outerPane.heightProperty().subtract(innerPane.prefHeightProperty()).divide(2));\r\n            outerPane.getChildren().add(innerPane);\r\n\r\n            Pane innerDesignPane = new Pane();\r\n            innerDesignPane.setPrefSize(370, 73);\r\n            innerDesignPane.setStyle(\"-fx-background-radius: 0 0 10 10; -fx-background-color: white;\");\r\n            innerDesignPane.layoutYProperty().bind(innerPane.heightProperty().subtract(innerDesignPane.prefHeightProperty()));\r\n            innerPane.getChildren().add(innerDesignPane);\r\n\r\n            Label courseTitle = new Label();\r\n            courseTitle.setPrefSize(345, 58);\r\n            courseTitle.layoutXProperty().bind(innerDesignPane.widthProperty().subtract(courseTitle.prefWidthProperty()).divide(2));\r\n            courseTitle.layoutYProperty().bind(innerDesignPane.heightProperty().subtract(courseTitle.prefHeightProperty()).divide(2));\r\n            courseTitle.setText(\"Course Title\");\r\n            courseTitle.setAlignment(Pos.CENTER);\r\n            innerDesignPane.getChildren().add(courseTitle);\r\n\r\n            browseCourseGridPane.add(outerPane, gridCtr++, row);\r\n\r\n            RowConstraints rowConstraints = new RowConstraints();\r\n            rowConstraints.setMinHeight(220.0);\r\n            rowConstraints.setPrefHeight(220.0);\r\n            rowConstraints.setVgrow(javafx.scene.layout.Priority.NEVER);\r\n\r\n            double newHeight = (row + 1) * rowHeight;\r\n            browseCourseWrapperPane.setPrefHeight(newHeight);\r\n\r\n            browseCourseGridPane.getRowConstraints().add(rowConstraints);\r\n            if (gridCtr == 2) {\r\n                gridCtr = 0;\r\n                row++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
===================================================================
diff --git a/src/main/java/com/example/Login_SignUp/StudentDashboardController.java b/src/main/java/com/example/Login_SignUp/StudentDashboardController.java
--- a/src/main/java/com/example/Login_SignUp/StudentDashboardController.java	(revision e00aabd0acec7ae9cd7892314892c633521537c9)
+++ b/src/main/java/com/example/Login_SignUp/StudentDashboardController.java	(date 1732771292164)
@@ -49,7 +49,7 @@
         InstructorDatabase instructorDatabase = new InstructorDatabase();
         instructorCtr = instructorDatabase.numberOfInstructors();
         LearnerDatabase learnerDB = new LearnerDatabase();
-        coursesEnrolledCTR.setText("1");
+
         for(int i = 0; i < instructorCtr; i++) {
             System.out.println("addRow pressed and row is " + row);
             Pane outerPane = new Pane();
Index: src/main/java/com/example/Login_SignUp/DatabaseConnection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Login_SignUp;\r\nimport java.sql.*;\r\n\r\npublic abstract class DatabaseConnection {\r\n    private String lastName;\r\n    private String firstName;\r\n    private String middleName;\r\n    private String university;\r\n    private String email;\r\n    private String pass;\r\n\r\n    public String getPass() {\r\n        return pass;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public String getUniversity() {\r\n        return university;\r\n    }\r\n\r\n    public String getMiddleName() {\r\n        return middleName;\r\n    }\r\n\r\n    public String getFirstName() {\r\n        return firstName;\r\n    }\r\n\r\n    public String getLastName() {\r\n        return lastName;\r\n    }\r\n\r\n    public DatabaseConnection() {\r\n        this.lastName = null;\r\n        this.firstName = null;\r\n        this.middleName = null;\r\n        this.university = null;\r\n        this.email = null;\r\n        this.pass = null;\r\n    }\r\n\r\n    public DatabaseConnection(String lastName, String firstName, String middleName,String university, String email, String password) {\r\n        this.lastName = lastName;\r\n        this.firstName = firstName;\r\n        this.middleName = middleName;\r\n        this.university = university;\r\n        this.email = email;\r\n        this.pass = password;\r\n    }\r\n\r\n    public abstract void insertData();\r\n\r\n    public abstract boolean checkEmail(String email) throws SQLException;\r\n    public abstract boolean checkPassword(String userPassword) throws SQLException;\r\n}\r\n
===================================================================
diff --git a/src/main/java/com/example/Login_SignUp/DatabaseConnection.java b/src/main/java/com/example/Login_SignUp/DatabaseConnection.java
--- a/src/main/java/com/example/Login_SignUp/DatabaseConnection.java	(revision e00aabd0acec7ae9cd7892314892c633521537c9)
+++ b/src/main/java/com/example/Login_SignUp/DatabaseConnection.java	(date 1732802048360)
@@ -1,7 +1,13 @@
 package com.example.Login_SignUp;
 import java.sql.*;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.SQLException;
 
 public abstract class DatabaseConnection {
+    String url = "jdbc:mysql://192.168.1.8/excelone";
+    String username = "excelOneAdmin";
+    String password = "secure123";
     private String lastName;
     private String firstName;
     private String middleName;
@@ -9,6 +15,8 @@
     private String email;
     private String pass;
 
+    protected Connection connection;
+
     public String getPass() {
         return pass;
     }
@@ -33,7 +41,9 @@
         return lastName;
     }
 
-    public DatabaseConnection() {
+
+
+    DatabaseConnection() {
         this.lastName = null;
         this.firstName = null;
         this.middleName = null;
@@ -42,17 +52,18 @@
         this.pass = null;
     }
 
-    public DatabaseConnection(String lastName, String firstName, String middleName,String university, String email, String password) {
-        this.lastName = lastName;
-        this.firstName = firstName;
-        this.middleName = middleName;
-        this.university = university;
-        this.email = email;
-        this.pass = password;
+
+    public DatabaseConnection(String lastName, String firstName, String middleName, String university, String email, String password) {
+            this.firstName = firstName;
+            this.lastName = lastName;
+            this.middleName = middleName;
+            this.university = university;
+            this.email = email;
+            this.pass = password;
     }
 
     public abstract void insertData();
 
     public abstract boolean checkEmail(String email) throws SQLException;
-    public abstract boolean checkPassword(String userPassword) throws SQLException;
+    public abstract boolean checkPassword(String userPassword, String email) throws SQLException;
 }
Index: src/main/java/com/example/Login_SignUp/InstructorDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Login_SignUp;\r\n\r\nimport java.sql.*;\r\n\r\npublic class InstructorDatabase extends DatabaseConnection{\r\n    String url = \"jdbc:mysql://192.168.1.8:3306/excelone\";\r\n    String username = \"excelOneAdmin\";\r\n    String password = \"secure123\";\r\n    public InstructorDatabase() {\r\n        super();\r\n    }\r\n\r\n    public InstructorDatabase(String lastName, String firstName, String middleName, String university, String email, String password) {\r\n        super(lastName, firstName, middleName, university, email, password);\r\n    }\r\n\r\n    @Override\r\n    public void insertData() {\r\n\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            System.out.println(\"Connected to the database!\");\r\n            String insertQuery = \"INSERT INTO instructors (LastName, FirstName, MiddleName, University, Email, Password) VALUES (?, ?, ?, ?, ?, ?)\";\r\n            try (PreparedStatement insertStmt = connection.prepareStatement(insertQuery)) {\r\n                insertStmt.setString(1, getLastName());\r\n                insertStmt.setString(2, getFirstName());\r\n                insertStmt.setString(3, getMiddleName());\r\n                insertStmt.setString(4, getUniversity());\r\n                insertStmt.setString(5, getEmail());\r\n                insertStmt.setString(6, getPass());\r\n                insertStmt.executeUpdate();\r\n                System.out.println(\"Instructor data inserted successfully!\");\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean checkEmail(String email) throws SQLException {\r\n\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String selectQuery = \"SELECT LastName, FirstName, MiddleName, University, Email, Password FROM instructors\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    if(resultSet.getString(\"Email\").equals(email)) return true;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean checkPassword(String userPassword) throws SQLException {\r\n\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String selectQuery = \"SELECT LastName, FirstName, MiddleName, University, Email, Password FROM instructors\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    if(resultSet.getString(\"Password\").equals(userPassword)) return false;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public int numberOfInstructors() throws SQLException {\r\n        int ctr = 0;\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String selectQuery = \"SELECT LastName FROM instructors\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                    ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                    while (resultSet.next()) {\r\n                        ctr++;\r\n                    }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return ctr;\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/main/java/com/example/Login_SignUp/InstructorDatabase.java b/src/main/java/com/example/Login_SignUp/InstructorDatabase.java
--- a/src/main/java/com/example/Login_SignUp/InstructorDatabase.java	(revision e00aabd0acec7ae9cd7892314892c633521537c9)
+++ b/src/main/java/com/example/Login_SignUp/InstructorDatabase.java	(date 1732802067623)
@@ -16,7 +16,6 @@
 
     @Override
     public void insertData() {
-
         try (Connection connection = DriverManager.getConnection(url, username, password)) {
             System.out.println("Connected to the database!");
             String insertQuery = "INSERT INTO instructors (LastName, FirstName, MiddleName, University, Email, Password) VALUES (?, ?, ?, ?, ?, ?)";
@@ -34,6 +33,19 @@
             e.printStackTrace();
         }
     }
+    public ResultSet getUserData(String email){
+        try(Connection connection = DriverManager.getConnection(url, username, password)){
+            String query = "SELECT * FROM instructors WHERE Email = ?";
+            PreparedStatement statement = connection.prepareStatement(query);
+            statement.setString(1, email);
+            ResultSet resultSet = statement.executeQuery();
+            return resultSet;
+        }catch (Exception e){
+            System.out.println(e.getMessage());
+        }
+        return null;
+    }
+
 
     @Override
     public boolean checkEmail(String email) throws SQLException {
@@ -54,8 +66,7 @@
     }
 
     @Override
-    public boolean checkPassword(String userPassword) throws SQLException {
-
+    public boolean checkPassword(String userPassword, String email) throws SQLException {
         try (Connection connection = DriverManager.getConnection(url, username, password)) {
             String selectQuery = "SELECT LastName, FirstName, MiddleName, University, Email, Password FROM instructors";
             try (Statement selectStmt = connection.createStatement();
Index: src/main/java/com/example/Login_SignUp/LearnerDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.Login_SignUp;\r\n\r\nimport java.sql.*;\r\n\r\npublic class LearnerDatabase extends DatabaseConnection {\r\n    String url = \"jdbc:mysql://192.168.1.8/excelone\";\r\n    String username = \"excelOneAdmin\";\r\n    String password = \"secure123\";\r\n\r\n    public LearnerDatabase() {\r\n        super();\r\n    }\r\n\r\n    public LearnerDatabase(String lastName, String firstName, String middleName, String university, String email, String password) {\r\n        super(lastName, firstName, middleName, university, email, password);\r\n    }\r\n\r\n    @Override\r\n    public void insertData() {\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            System.out.println(\"Connected to the database!\");\r\n            String insertQuery = \"INSERT INTO learners (LastName, FirstName, MiddleName, University, Email, Password) VALUES (?, ?, ?, ?, ?, ?)\";\r\n            try (PreparedStatement insertStmt = connection.prepareStatement(insertQuery)) {\r\n                insertStmt.setString(1, getLastName());\r\n                insertStmt.setString(2, getFirstName());\r\n                insertStmt.setString(3, getMiddleName());\r\n                insertStmt.setString(4, getUniversity());\r\n                insertStmt.setString(5, getEmail());\r\n                insertStmt.setString(6, getPass());\r\n                insertStmt.executeUpdate();\r\n                System.out.println(\"Student data inserted successfully!\");\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n//TIWASA NI\r\n    public void getUserData(){\r\n        try(Connection connection = DriverManager.getConnection(url, username, password)){\r\n            String query = \"SELECT * FROM learners WHERE email = ?\";\r\n            PreparedStatement statement = connection.prepareStatement(query);\r\n            statement.setString(1, \"bebedorkarolvincent@gmail.com\");\r\n            ResultSet resultSet = statement.executeQuery();\r\n\r\n//            while(resultSet.next()){\r\n//                String name = resultSet.getString(name);\r\n//            }\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean checkEmail(String email) throws SQLException {\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String selectQuery = \"SELECT LastName, FirstName, MiddleName, University, Email, Password FROM learners\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    if(resultSet.getString(\"Email\").equals(email)) return true;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public boolean checkPassword(String userPassword) throws SQLException {\r\n        try (Connection connection = DriverManager.getConnection(url, username, password)) {\r\n            String selectQuery = \"SELECT LastName, FirstName, MiddleName, University, Email, Password FROM learners\";\r\n            try (Statement selectStmt = connection.createStatement();\r\n                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {\r\n\r\n                while (resultSet.next()) {\r\n                    if(resultSet.getString(\"Password\").equals(userPassword)) return true;\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n}\r\n
===================================================================
diff --git a/src/main/java/com/example/Login_SignUp/LearnerDatabase.java b/src/main/java/com/example/Login_SignUp/LearnerDatabase.java
--- a/src/main/java/com/example/Login_SignUp/LearnerDatabase.java	(revision e00aabd0acec7ae9cd7892314892c633521537c9)
+++ b/src/main/java/com/example/Login_SignUp/LearnerDatabase.java	(date 1732804398411)
@@ -3,18 +3,17 @@
 import java.sql.*;
 
 public class LearnerDatabase extends DatabaseConnection {
-    String url = "jdbc:mysql://192.168.1.8/excelone";
-    String username = "excelOneAdmin";
-    String password = "secure123";
 
     public LearnerDatabase() {
         super();
     }
+    private static LearnerDatabase instance;
 
     public LearnerDatabase(String lastName, String firstName, String middleName, String university, String email, String password) {
         super(lastName, firstName, middleName, university, email, password);
     }
 
+
     @Override
     public void insertData() {
         try (Connection connection = DriverManager.getConnection(url, username, password)) {
@@ -35,52 +34,64 @@
         }
     }
 //TIWASA NI
-    public void getUserData(){
+    public ResultSet getUserData(String email){
         try(Connection connection = DriverManager.getConnection(url, username, password)){
-            String query = "SELECT * FROM learners WHERE email = ?";
+            String query = "SELECT * FROM learners WHERE Email = ?";
             PreparedStatement statement = connection.prepareStatement(query);
-            statement.setString(1, "bebedorkarolvincent@gmail.com");
+            statement.setString(1, email);
             ResultSet resultSet = statement.executeQuery();
-
-//            while(resultSet.next()){
-//                String name = resultSet.getString(name);
-//            }
+            return resultSet;
         }catch (Exception e){
             System.out.println(e.getMessage());
         }
+        return null;
     }
 
     @Override
     public boolean checkEmail(String email) throws SQLException {
-        try (Connection connection = DriverManager.getConnection(url, username, password)) {
-            String selectQuery = "SELECT LastName, FirstName, MiddleName, University, Email, Password FROM learners";
-            try (Statement selectStmt = connection.createStatement();
-                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {
+        String selectQuery = "SELECT Email FROM learners WHERE Email = ?";
+
+        try (Connection connection = DriverManager.getConnection(url, username, password);
+             PreparedStatement ps = connection.prepareStatement(selectQuery)) {
 
-                while (resultSet.next()) {
-                    if(resultSet.getString("Email").equals(email)) return true;
+            ps.setString(1, email);
+
+            try (ResultSet resultSet = ps.executeQuery()) {
+                if (resultSet.next()) {
+                    return true;
                 }
             }
         } catch (SQLException e) {
             e.printStackTrace();
         }
+
         return false;
     }
 
+
     @Override
-    public boolean checkPassword(String userPassword) throws SQLException {
-        try (Connection connection = DriverManager.getConnection(url, username, password)) {
-            String selectQuery = "SELECT LastName, FirstName, MiddleName, University, Email, Password FROM learners";
-            try (Statement selectStmt = connection.createStatement();
-                 ResultSet resultSet = selectStmt.executeQuery(selectQuery)) {
+    public boolean checkPassword(String userPassword, String email) throws SQLException {
+        String selectQuery = "SELECT Password FROM learners WHERE Email = ?";
+
+        try (Connection connection = DriverManager.getConnection(url, username, password);
+             PreparedStatement ps = connection.prepareStatement(selectQuery)) {
 
-                while (resultSet.next()) {
-                    if(resultSet.getString("Password").equals(userPassword)) return true;
+            ps.setString(1, email);
+
+            try (ResultSet resultSet = ps.executeQuery()) {
+                if (resultSet.next()) {
+                    String storedPassword = resultSet.getString("Password");
+                    System.out.println(storedPassword + " " + userPassword);
+                    if (storedPassword.equals(userPassword)) {
+                        return true;
+                    }
                 }
             }
         } catch (SQLException e) {
             e.printStackTrace();
         }
+
         return false;
     }
+
 }
